"""initial snake-case schema

Revision ID: 3bbd683f9eeb
Revises: 
Create Date: 2025-05-21 23:08:37.169782

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3bbd683f9eeb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency_symbol',
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_table('customer_service_agent',
    sa.Column('agent_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('employment_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('agent_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('market',
    sa.Column('market_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('market_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('surname', sa.String(length=60), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('verify_time', sa.DateTime(), nullable=True),
    sa.Column('national_id', sa.String(length=20), nullable=True),
    sa.Column('kyc_status', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('currency',
    sa.Column('currency_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['currency_symbol.symbol'], ),
    sa.PrimaryKeyConstraint('currency_id')
    )
    op.create_table('issue',
    sa.Column('issue_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('creation_time', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resolve_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['customer_service_agent.agent_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('issue_id')
    )
    op.create_table('order_book',
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.market_id'], ),
    sa.PrimaryKeyConstraint('market_id')
    )
    op.create_table('price_history',
    sa.Column('price_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('high_price', sa.Float(), nullable=True),
    sa.Column('low_price', sa.Float(), nullable=True),
    sa.Column('open_price', sa.Float(), nullable=True),
    sa.Column('close_price', sa.Float(), nullable=True),
    sa.Column('open_time', sa.DateTime(), nullable=True),
    sa.Column('close_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.market_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('price_id', 'market_id')
    )
    op.create_table('trade',
    sa.Column('trade_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('trade_time', sa.DateTime(), nullable=True),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['market.market_id'], ),
    sa.PrimaryKeyConstraint('trade_id')
    )
    op.create_table('transaction',
    sa.Column('transaction_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('request_time', sa.DateTime(), nullable=True),
    sa.Column('approve_time', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['customer_service_agent.agent_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('wallet',
    sa.Column('wallet_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('total_balance', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('wallet_id')
    )
    op.create_table('crypto_currency',
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('market_cap', sa.BigInteger(), nullable=True),
    sa.Column('trading_vol', sa.BigInteger(), nullable=True),
    sa.Column('circulation', sa.BigInteger(), nullable=True),
    sa.Column('total_supply', sa.BigInteger(), nullable=True),
    sa.Column('max_supply', sa.BigInteger(), nullable=True),
    sa.Column('ath', sa.Float(), nullable=True),
    sa.Column('atl', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.currency_id'], ),
    sa.PrimaryKeyConstraint('currency_id')
    )
    op.create_table('currency_has_market',
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.currency_id'], ),
    sa.ForeignKeyConstraint(['market_id'], ['market.market_id'], ),
    sa.PrimaryKeyConstraint('currency_id', 'market_id')
    )
    op.create_table('fiat_currency',
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('origin', sa.String(length=60), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.currency_id'], ),
    sa.PrimaryKeyConstraint('currency_id')
    )
    op.create_table('order',
    sa.Column('order_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('creation_time', sa.DateTime(), nullable=True),
    sa.Column('close_time', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.Column('order_book_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['market.market_id'], ),
    sa.ForeignKeyConstraint(['order_book_id'], ['order_book.market_id'], ),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.trade_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('wallet_has_currency',
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.currency_id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.wallet_id'], ),
    sa.PrimaryKeyConstraint('wallet_id', 'currency_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wallet_has_currency')
    op.drop_table('order')
    op.drop_table('fiat_currency')
    op.drop_table('currency_has_market')
    op.drop_table('crypto_currency')
    op.drop_table('wallet')
    op.drop_table('transaction')
    op.drop_table('trade')
    op.drop_table('price_history')
    op.drop_table('order_book')
    op.drop_table('issue')
    op.drop_table('currency')
    op.drop_table('user')
    op.drop_table('market')
    op.drop_table('customer_service_agent')
    op.drop_table('currency_symbol')
    # ### end Alembic commands ###
